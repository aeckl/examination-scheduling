Sub main()
    Dim sht As Worksheet
    Dim csht As Worksheet
    Dim rng As Range
    Dim crng As Range
    
    
    Dim lr As Long
    
    Application.ScreenUpdating = False
    
    Set sht = ThisWorkbook.ActiveSheet
    Set csht = Sheets.Add
    csht.Name = "Conflicts"
    
    
    'get last row
    lr = sht.Cells.Find("*", SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row
    Set rng = sht.Range(sht.Cells(2, 1), sht.Cells(lr, 1))
    Set crng = csht.Range(csht.Cells(2, 1), csht.Cells(lr, 1))
    'copy lectures to conflict matrix
    rng.Copy crng
    
    crng.RemoveDuplicates Columns:=Array(1)
    
    
    'Call ImportWorksheet
    
    Call RemoveRows(csht, sht)
    
    Call createConflicMatrix(csht, sht, lr)
    
    Call FormatConflictMatrix(csht, sht)
    
    Application.ScreenUpdating = True
    
End Sub



Sub ImportWorksheet()
    ' This macro will import a file into this workbook
    Dim wb As Workbook
    
    Filename = "Szenarioergebnis SoSe 2016.xlsx"
    TabName = "Szenarioergebnis SoSe 2016"
    ControlFile = ActiveWorkbook.Name
    Workbooks.Open Filename:=ThisWorkbook.Path & "\" & Filename
    
    Sheets(TabName).Copy After:=Workbooks(ControlFile).Sheets(1)
    Windows(Filename).Activate
    ActiveWorkbook.Close SaveChanges:=False
    Windows(ControlFile).Activate

End Sub

Sub RemoveRows(csht As Worksheet, sht As Worksheet)

    Dim i As Integer
    Dim room As String
    Dim vrange As Range
    Dim lr As Long
    Dim ssht As Worksheet
    i = 2
    
    Set ssht = ThisWorkbook.Sheets("Szenarioergebnis SoSe 2016")
    slr = ssht.Cells.Find("*", SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row
    
    Do While csht.Cells(i, 1).Value <> ""
        room = csht.Cells(i, 1).Value
        Set vrange = ssht.Range(ssht.Cells(2, 1), ssht.Cells(slr, 1)).Find(What:=room, MatchCase:=True)
        
        
        
        If vrange Is Nothing Then
            'MsgBox (room)
            csht.Rows(i).EntireRow.Delete
        Else
            i = i + 1
        End If
                
    Loop

End Sub

Sub createConflicMatrix(csht As Worksheet, sht As Worksheet, lr As Long)

    Dim rng As Range
    Dim clr As Long

    clr = csht.Cells.Find("*", SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row
    Set rng = csht.Range(csht.Cells(2, 1), csht.Cells(clr, 1))
    
    rng.Copy
    csht.Range(csht.Cells(1, 2), csht.Cells(1, clr)).PasteSpecial Transpose:=True
    
    Call fillConflicMatrix(csht, sht, lr, clr)

End Sub

Sub fillConflicMatrix(csht As Worksheet, sht As Worksheet, lr As Long, clr As Long)

    Dim foundAll As Boolean
    foundAll = False
    Dim vrange1 As Range
    Dim vrange2 As Range
    Dim room1 As String
    Dim room2 As String
    Dim nextE As Long
    nectE = 0
    Dim a As Long, b As Long
    

    For i = 2 To lr
        room1 = sht.Cells(i, 1).Value
        room2 = sht.Cells(i, 8).Value
        
        Set vrange1 = Range(csht.Cells(2, 1), csht.Cells(clr, 1)).Find(What:=room1, MatchCase:=True)
        Set vrange2 = Range(csht.Cells(1, 2), csht.Cells(1, clr)).Find(What:=room2, MatchCase:=True)
        
        If Not vrange1 Is Nothing And Not vrange2 Is Nothing Then
            csht.Cells(vrange1.Row, vrange2.Column).Value = sht.Cells(i, 4).Value
        End If
    Next i
    
    Call makeSymmetric(csht, sht, lr, clr)
    
End Sub
Sub FormatConflictMatrix(csht As Worksheet, sht As Worksheet)

Dim clr As Long
Dim cfsht As Worksheet

csht.Copy After:=csht
Set cfsht = ThisWorkbook.ActiveSheet
cfsht.Name = "ConflictsFormat"

clr = csht.Cells.Find("*", SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row

    For i = 2 To clr
        For j = 2 To clr
            If i = j Then
                cfsht.Cells(i, j).Clear
            ElseIf Not IsEmpty(csht.Cells(i, j).Value) Then
                cfsht.Cells(i, j).Value = 1
            End If

        Next j
    Next i
    
    For i = 2 To clr
        cfsht.Cells(i, 1) = i - 1
        cfsht.Cells(1, i) = i - 1
    Next i

End Sub


Sub makeSymmetric(csht As Worksheet, sht As Worksheet, lr As Long, clr As Long)

    Dim foundAll As Boolean
    foundAll = False
    Dim vrange1 As Range
    Dim vrange2 As Range
    Dim room1 As String
    Dim room2 As String
    Dim nextE As Long
    

    For i = 2 To clr
        For j = i To clr
            If i = j Then
                csht.Cells(i, j).Value = sht.Cells(Range(sht.Cells(2, 1), sht.Cells(lr, 1)).Find(What:=csht.Cells(i, 1).Value, MatchCase:=True).Row, 5).Value
                csht.Cells(clr + 1, j).Value = sht.Cells(Range(sht.Cells(2, 1), sht.Cells(lr, 1)).Find(What:=csht.Cells(i, 1).Value, MatchCase:=True).Row, 5).Value
                csht.Cells(i, clr + 1) = sht.Cells(Range(sht.Cells(2, 1), sht.Cells(lr, 1)).Find(What:=csht.Cells(i, 1).Value, MatchCase:=True).Row, 5).Value
            ElseIf Not IsEmpty(csht.Cells(i, j).Value) Then
                csht.Cells(j, i).Value = csht.Cells(i, j).Value
            ElseIf Not IsEmpty(csht.Cells(j, i).Value) Then
                csht.Cells(i, j).Value = csht.Cells(j, i).Value
            End If

        Next j
    Next i

Call SortMatrix(csht, sht, lr, clr)

End Sub
Sub SortMatrix(csht As Worksheet, sht As Worksheet, lr As Long, clr As Long)

    Dim foundAll As Boolean
    foundAll = False
    Dim matrix As Range
    Dim room1 As String
    Dim room2 As String
    Dim nextE As Long
    Dim myarray As Variant

    Set matrix = Range(csht.Cells(2, 1), csht.Cells(clr, clr + 1))
    matrix.Sort key1:=Range(csht.Cells(2, clr + 1), csht.Cells(clr + 1, clr + 1)), order1:=xlDescending
    
    Set matrix = Range(csht.Cells(1, 1), csht.Cells(clr + 1, clr + 1))
    
    myarray = matrix.Value
    
    matrix.Value = Application.WorksheetFunction.Transpose(myarray)
    
    Set matrix = Range(csht.Cells(2, 1), csht.Cells(clr, clr + 1))
    matrix.Sort key1:=Range(csht.Cells(2, clr + 1), csht.Cells(clr + 1, clr + 1)), order1:=xlDescending
    
        
    Dim nsht As Worksheet
    Set nsht = Sheets.Add
    nsht.Name = "Students"
    
    Range(csht.Cells(2, clr + 1), csht.Cells(clr, clr + 1)).Copy Range(nsht.Cells(1, 1), nsht.Cells(clr, 1))
    
    csht.Columns(clr + 1).EntireColumn.Delete
    csht.Rows(clr + 1).EntireRow.Delete
    


End Sub

Sub RemoveR()

    Dim i As Integer
    i = 2
    
    Do While csht.Cells(i, 1).Value <> ""
        If (InStr(4, csht.Cells(i, 1).Value, "-") >= 4 Or InStr(csht.Cells(i, 1).Value, "_") >= 4) Then
            csht.Cells(i, 2).Value = "Here"
            Rows(i).EntireRow.Delete
        Else
            i = i + 1
        End If
        
    Loop

End Sub

